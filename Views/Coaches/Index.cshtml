@model IEnumerable<AnyoneForTennis.Models.Coach>

@{
    ViewData["Title"] = "Coaches";
    var userId = User?.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value; // Get logged-in UserId
    var isAdmin = (bool)ViewBag.IsAdmin; // Check if the user is an admin
    var userCoachId = ViewBag.UserCoachId; // Pass UserCoachId from the controller
}

<div class="container mt-5">
    <h1 class="text-center mb-5">Our Coaches</h1>

    @if (isAdmin)
    {
        <div class="text-right mb-3">
            <a class="btn btn-success" asp-action="Create">Create New Coach</a>
        </div>
    }

    <div class="row">
        @foreach (var coach in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card shadow-lg" style="background-color: @GetRandomPastelColor();">
                    <div class="card-body text-center">
                        <div class="mb-3">
                            @if (coach.Photo != null && coach.Photo.Length > 0 && coach.Photo[0] != 0)
                            {
                                <img src="data:image/jpg;base64,@Convert.ToBase64String(coach.Photo)" class="img-fluid rounded-circle" alt="@coach.FirstName @coach.LastName" style="width: 150px; height: 150px; object-fit: cover;">
                            }
                            else
                            {
                                <img src="@Url.Content("~/img/8-512.jpg")" class="img-fluid rounded-circle" alt="Default Coach Photo" style="width: 150px; height: 150px; object-fit: cover;">
                            }
                        </div>
                        <h3 class="card-title">@coach.FirstName @coach.LastName</h3>
                        <p class="card-text text-muted">@Html.DisplayFor(modelItem => coach.Biography)</p>
                        <div class="mt-3">
                            <a class="btn btn-primary" asp-action="Details" asp-route-id="@coach.CoachId">View Details</a>

                            @if (isAdmin || userCoachId == coach.CoachId)
                            {
                                <a class="btn btn-warning" asp-action="Edit" asp-route-id="@coach.CoachId">Edit</a>
                            }

                            @if (isAdmin)
                            {
                                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@coach.CoachId">Delete</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Inline styles for cards and images -->
<style>
    .card {
        border-radius: 15px;
        padding: 20px;
        margin-bottom: 20px;
    }

    .img-fluid {
        border-radius: 50%;
    }

    .card-title {
        font-size: 1.5rem;
        font-weight: bold;
    }

    .card-text {
        font-size: 1rem;
        height: 60px;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>

@functions {
    // Function to return a random pastel color focusing on blues and greens
    private string GetRandomPastelColor()
    {
        var colors = new[] { "#BAFFC9", "#BAE1FF", "#C4F7D7", "#A9D6E5", "#B7E4C7", "#CDE4F4", "#D1F2EB" };
        Random rand = new Random();
        return colors[rand.Next(colors.Length)];
    }
}
