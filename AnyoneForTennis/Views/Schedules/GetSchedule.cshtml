@model IEnumerable<AnyoneForTennis.Models.Schedule>

@{
    ViewData["Title"] = "All Schedules";
    var userId = User?.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value; // Get logged-in user ID
}

<div class="container">
    <h2 class="text-center mb-4">Upcoming Schedules</h2>

    @if (Model != null && Model.Any())
    {
        <div class="row">
            @foreach (var schedule in Model.OrderBy(s => s.SchedulePlus?.DateTime)) // Sort by DateTime
            {
                <div class="col-md-6 mb-4">
                    <div class="card shadow-sm" style="background-color: @GetRandomPastelColor();">
                        <div class="card-body">
                            <h5 class="card-title">@schedule.Name</h5>
                            <p class="card-text">
                                <strong>Location:</strong> @schedule.Location<br />
                                <strong>Description:</strong> @schedule.Description<br />

                                @if (schedule.SchedulePlus != null)
                                {
                                    <strong>Date:</strong> @schedule.SchedulePlus.DateTime.ToString("dd MMM yyyy | hh:mm tt")
                                    <br />
                                    <strong>Coach:</strong> @schedule.SchedulePlus.Coach?.FullName
                                }
                                else
                                {
                                    <span class="text-danger">No schedule details available.</span>
                                }
                            </p>

                            <a href="@Url.Action("Details", "Schedules", new { id = schedule.ScheduleId })" class="btn btn-primary">View Details</a>

                            @if (User.Identity.IsAuthenticated && userId != null)
                            {
                                <!-- Enroll button for logged-in users -->
                                <button type="button" class="btn btn-success mt-2" onclick="enroll(@schedule.ScheduleId)">Enroll</button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-warning text-center">
            No schedules available.
        </div>
    }
</div>

<!-- Modal for Enrollment Popup -->
<div class="modal fade" id="enrollmentModal" tabindex="-1" role="dialog" aria-labelledby="enrollmentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="enrollmentModalLabel"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="enrollmentModalBody"></div>
            <div class="modal-footer" id="enrollmentModalFooter">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Continue browsing</button>
                <a id="scheduleLink" class="btn btn-primary" style="display: none;">See my schedule</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function enroll(scheduleId) {
            $.ajax({
                url: '/Schedules/Enroll',
                type: 'POST',
                data: {
                    scheduleId: scheduleId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    // Set the modal title and body based on the response
                    $('#enrollmentModalLabel').text(response.isSuccess ? 'Successfully Enrolled' : 'Enrollment Failed');
                    $('#enrollmentModalBody').text(response.message);

                    // Show or hide the "View my schedule" button
                    if (response.isSuccess) {
                        // Use window.location.origin to get the base URL
                        $('#scheduleLink').attr('href', window.location.origin).show();
                    } else {
                        $('#scheduleLink').hide();
                    }

                    // Show the modal
                    $('#enrollmentModal').modal('show');
                },
                error: function () {
                    alert('An error occurred while enrolling. Please try again.');
                }
            });
        }
    </script>
}


@functions {
    // Helper function to return a random pastel color for the cards
    private string GetRandomPastelColor()
    {
        var colors = new[] { "#FFB3BA", "#FFDFBA", "#FFFFBA", "#BAFFC9", "#BAE1FF", "#C2CFFF", "#C6E2FF", "#D1F2EB" };
        Random rand = new Random();
        return colors[rand.Next(colors.Length)];
    }
}
